let $LANG = 'en'  "set message language
set langmenu=en   "set menu's language of gvim. no spaces beside '='  Configuration file for vim
set modelines=0		" CVE-2007-2438
set t_Co=256
set number
set laststatus=2
set ts=2
set tabstop=2
set shiftwidth=2
set softtabstop=2
set showtabline=2
set smartindent
set expandtab
set noautoindent
set rnu
set incsearch
set nowrap
set ignorecase
"set clipboard=unnamed
set autoread
set autowriteall
set fileencodings=utf-8,gbk
set termencoding=utf-8
set encoding=utf-8
set ai
set hls
set helplang=cn
set history=400
"不自动创建备份文件
set nobackup
set noswapfile
set background=light
"粘贴模式切换
set pastetoggle=<F9>
"快捷命令
nnoremap <silent> <F5> :!open % -a Sublime\ Text<cr>

set cursorline
" Normally we use vim-extensions. If you want true vi-compatibility
" remove change the following statements
set nocompatible	" Use Vim defaults instead of 100% vi compatibility
set backspace=2		" more powerful backspacing
nnoremap <C-l> gt
nnoremap <C-h> gT
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
" let Vundle manage Vundle
" required!
Bundle 'gmarik/vundle'
" My Bundles here:
"
" vim-scripts repos
"Bundle 'L9'
"
" non github repos
"Bundle 'git://git.wincent.com/command-t.git'
"
" original repos on github
"Bundle 'tpope/vim-fugitive'
"Bundle 'Lokaltog/vim-easymotion'
"Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
"Bundle 'genutils.vim'
Bundle 'WinManager'
Bundle 'scrooloose/nerdtree'
"Bundle 'neocomplcache'
Bundle 'bling/vim-airline'
Bundle 'surround.vim'
Bundle 'ctrlp.vim'
Bundle 'jsbeautify'
Bundle 'molokai'
Bundle 'mattn/emmet-vim'
Bundle 'rking/ag.vim'
Bundle 'heavenshell/vim-jsdoc'
Bundle 'ActionScript'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'
Plugin 'kchmck/vim-coffee-script'
Plugin 'vim-stylus'
Plugin 'jade.vim'
Plugin 'marijnh/tern_for_vim'
Plugin 'Valloric/YouCompleteMe'
"Plugin 'Conque-Shell'
Plugin 'Tagbar'
syntax enable
syntax on
filetype plugin indent on     " required!
"
" Brief help  -- 此处后面都是vundle的使用命令
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles

"tagbar
  nmap <F8> :TagbarToggle<CR>

"jsdoc
    let g:jsdoc_default_mapping=0
    let g:jsdoc_additional_descriptions=0
    nnoremap <F6> :JsDoc<cr>

"ag.vim
    nnoremap <F3> :Ag<space>
    let g:aghighlight=1
    let g:agprg="ag --colum --smart-case"

colorscheme molokai
" make vim background transparen
hi Normal ctermfg=252 ctermbg=none
" jsbeautify {
"   <leader> ff
    "nnoremap <silent> <leader>ff :call g:Jsbeautify()<cr>
"    nnoremap <silent> =G :call g:Jsbeautify()<cr>
" }
" YouCompleteMe {
let g:ycm_min_num_of_chars_for_completion = 3
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_complete_in_comments = 1
let g:ycm_key_list_select_completion = ['<c-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<c-p>', '<Up>']
let g:ycm_semantic_triggers =  {
  \   'perl' : ['->'],
  \   'php' : ['->', '::'],
  \   'cs,java,javascript,typescript,coffeeecript,d,python,perl6,scala,vb,elixir,go' : ['.'],
  \   'ruby' : ['.', '::'],
  \   'erlang' : [':'],
  \ }
" 比较喜欢用tab来选择补全...
function! MyTabFunction ()
  let line = getline('.')
  let substr = strpart(line, -1, col('.')+1)
  let substr = matchstr(substr, "[^ \t]*$")
  if strlen(substr) == 0
    return "\<tab>"
  endif
  return pumvisible() ? "\<c-n>" :
  "\<c-x>\<c-o>"
endfunction
inoremap <tab> <c-r>=MyTabFunction()<cr>

:setlocal omnifunc=tern#Complete
"call tern#Enable()
":runtime after/ftplugin/javascript_tern.vim


"ctrl.vim{
    let g:ctrlp_map = '<c-p>'
    let g:ctrlp_cmd = 'CtrlP'
    let g:ctrlp_working_path_mode = 'w'
    let g:ctrlp_by_filename = '1'
    let g:ctrlp_custom_ignore = '\v[\/](node_modules|build)|(\.(swp|ico|git|svn))$'
    let g:ctrlp_open_new_file = 't'
    let g:ctrlp_clear_cache_on_exit = 1
"    let g:ctrlp_user_command = 'find %s -type f'
" }

"airline {
    let g:airline_theme = 'badwolf'
"}

"Nerdtree{
    let g:NERDTree_title="[NERDTree]"
    let g:NERTreeWinPos='left'
    function! NERDTree_Start()
        exec 'NERDTree'
    endfunction

    function! NERDTree_IsValid()
            return 1
    endfunction
"}

"Neocomplcache{

    let g:neocomplcache_enable_at_startup = 1
    autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
    autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
    autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
    inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
"}

"Winmanager {
    "let g:winManagerWindowLayout="NERDTree|TagList"
    "let g:winManagerWidth = 30
    "let g:defaultExplorer = 0    "Don't write backup file if vim is being called by "crontab -e"
    "let g:persistentBehaviour = 0
    noremap <F2> :NERDTreeToggle<cr>
    ":nmap <C-K> <C-W>w
    " open nerdtree when vim enter
    ":autocmd BufEnter *.* :set rnu
"}

"actionscript{
    au BufNewFile,BufRead *.as setf actionscript
"}
"vim-markdown{
    let g:vim_markdown_frontmatter=1
    let g:vim_markdown_math=1
    let g:vim_markdown_folding_disabled=1
"}

"coffee-script{
    let g:coffee_watch_vert = 1
"}
"color config
"pup Menu
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..
hi Pmenu ctermfg=white ctermbg=017


au BufWrite /private/tmp/crontab.* set nowritebackup
" Don't write backup file if vim is being called by "chpass"
au BufWrite /private/etc/pw.* set nowritebackup

" remove ^M
au BufWrite *.js ks|execute ":%s/\r$//ge"|'s
" remove line end space when save file
au BufWrite *.js ks|execute ":%s/\\s*$//ge"|'s

